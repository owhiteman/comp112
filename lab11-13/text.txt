A Guide to High Quality Web DevelopmentThe World Wide Web is populated by millions of web pages. It is possible for almost anyone to create and upload a web page in next to no time at all. But, as in all things, there is a world of difference between an ill-conceived amateur product and that created with professionalism, quality and usability in mind.There is so much more to a good web site than code quality. It must be easy to use and appealing in order to maintain an audience. Poor quality code makes a site difficult to maintain and prone to exhibit problems as newer browsers are released. Poor interface makes a site unappealing to its audience. True quality is achieved when sensible standards-based code is combined with an effective structure and design. This guide endeavors to direct you through a process that will help you to produce quality results. There are three basic processes involved:PlanningIn all projects the planning phase is key. Without a well-considered plan the creation of your site will be fraught with difficulties and frustration and your end product risks being confused and inconsistent. Many questions must be asked and answered to establish the specific needs of each site you create.Construction Though it is tempting to leap in and construct your whole site in one go, it is more sensible to construct a single template page first. Once that page has been through the evaluation phase of the process you can return to construction and create the rest of your site, content in the knowledge that your foundation code is sound. EvaluationEvaluation is a phase that you will repeat during the course of a project. Begin evaluation after you have created and validated. This phase will make sure that your site is usable and sensible. When your site is complete, evaluate it again to ensure that it works as a unit. Your movement through these three phases is not strictly sequential. Planning is always your first port of call, but construction and evaluation are phases that you will alternate between during the course of a project.PlanningBefore you can design the structure of your site, you must know what the purpose of your site is and what information it needs to convey.No web site will succeed if it does not consider the needs of its audience.To start the planning process you need to answer some questions.What is the purpose of your web site?If you were creating a site for a business, the purpose of your site may be to provide information about products and services and a means for potential clients to make contact. Different sites will have different goals. It isn't enough to need a web site, you must know why.Who is your target audience?Considering your expected audience for a site may influence some design decisions. Your user is paramount. They should consider your site useful and easy to use or you risk losing them. It is important to keep your audience firmly in mind throughout the development of a site; their reaction will determine the success or failure of your project.What will be the content of your site?Once you have established what your site should achieve and whom your target audience is you need to establish what content you will need. Solid content is vital. Your site can be as well structured as you please but if it is devoid of content it is no use to anyone. Gather together the resources you already have and consider what else you need to obtain.Before you start to code you should have text (edited and proofed) and images ready to go. There may well be tweaks to these later in the process but without the core of your content in existence you cannot effectively design your site. How many pages (or sections) will your site contain?Establishing the size and basic organization of your site allows you to start to organize your content appropriately. Now that you know what your site will contain you can start to map out how that information will be presented in your site structure.Draw a diagram that illustrates how those pages will be structured.The example below is for an imaginary business site. There are seven pages in total. The main page is understandably at the top of the structure. From that point information is divided into three sections: products, services, and request/contact information. The products section in turn hosts subsections of products (plasticware, metalware and all other products).Determine the navigation systems for your site.Take the diagram you have just produced and consider what navigation should be provided on each page. This is a good time to establish a filename for each page.At a bare minimum each page should have a link back to the "home" page. Ideally each page will have links to at least the other pages in their section. Users don't want to have to hop back and forth through your structure to navigate your site. Give them the cleanest most comprehensive navigation system possible.So, for the site diagrammed above, there will be a link to the home page on every page and the following as indicated by blue arrows:Now you will have a complete map of your site, outlining how it will all link together.Sketch an outline for your template page.Indicate where your navigation, title and main content will sit. Describe how the site will work. Contemplate your colour scheme: pick suitable colours for headings, text, background and links (all states: visited, unvisited etc.).Finally, you are ready to start coding! All this preparation should make the next phase very straightforward.ConstructionWith a solid plan beside you, you can start to code a template (or prototype) page. This will be a single page in your site and will act as the basic template for your other pages. Establish the structure of the page and clearly comment where your navigation, main content, page heading, footer and so forth are coded. Use appropriate structural tags to describe your content. Put each paragraph of text in <p> tags, put headings in the appropriate level of heading tag and so forth.Ensure your page includes:* an appropriate doctype* character set information* sensible, useful alt valuesNow validate this template page. When your code is valid and you are satisfied with the general structure, you will evaluate your template. Return to construction once you have perfected this initial page.EvaluationEvaluation requires you to cast a critical eye over your work. Do this after completing your template page and before writing any more pages so that you don't duplicate problems through your entire site.Ask yourself the following questions:* Does everything work?* Do my chosen colours contrast well? (Remember to check all link states.)* Are the different link states distinguishable?* Is all text easy to read? (Consider font, size, style and colour.)* Does window resizing adversely affect the page layout?* Does the page work as intended in the required browsers?* Is the content accessible without images?* Is the navigation easy to use and understand?* Can the user determine where they are in the site structure?Remember that your page is understandable to you because you created it but it isn't for you, it is for your users. Imagine you are a typical web user when evaluating your page. Be critical: consider how you can improve the experience of using your site.A web site doesn't have to be 'pretty' to be useable. Focus on usability first and steer clear of 'party tricks' that you think will make your page look cool. That flashing, animated gif of a cutesy bunny won't enhance any users experience and is almost guaranteed to annoy them instead. Annoyed users don't stay long.When you are satisfied with both the construction and design of your template page it is time to return to the construction phase to complete the rest of your web site.Back to constructionAlways validate your code after any change. This is particularly important before you duplicate your template otherwise you will copy any mistakes through every page in your site.Duplicate your template page so you can produce the other pages for your site. Validate each one when you have finished adding its content to ensure you haven't introduced any mistakes.Your code should be easily maintainable. Appropriate use of comments and clear code layout will assist this greatly.When you have your completed web site, evaluate it again to consider it as a whole.Evaluate againThe evaluation of the site as a whole should focus more on its behavior as a unit than on the details of page layout, which you have already thoroughly considered when designing the template page.Ensure that your site works as intended:* Test every link.* Check that each page's position in the site structure is obvious to the user.* Make sure all images display.* Make sure all special characters display properly.* Make sure alt values for all images are descriptive and sensible - view your site without images to test this performance.* Test the site in different browsers.* Read your entire site to ensure you haven't introduced any mistakes.* Test all user input aspects of your site. Remember: you created your site so you understand it, but you aren't the intended audience of your site. You must consider how a first time user will cope with the experience you are providing in order for your site to be successful.